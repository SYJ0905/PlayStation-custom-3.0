{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/dist/js/swiper.esm.bundle.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","data","key","el","dom7ElementDataStorage","dataKey","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","styles$$1","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","eventHandler","index$$1","data$$1","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","transitionEnd$1","animating","transition$1","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","ua","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","toLowerCase","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","needsReLoop","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","swiper_esm_bundle_Browser","isSafari","isIE","isEdge","isUiWebView","test","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","offset$$1","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","scrollbarHide","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","slideEl","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","text$$1","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","transform$$1","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0c0885.14b778c5.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.4.6\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2018 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: December 19, 2018\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles$$1 = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles$$1.length; i += 1) {\n        if (styles$$1[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n    }\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index$$1) => {\n          if (eventHandler === handler) {\n            self.eventsListeners[event].splice(index$$1, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data$$1;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data$$1 = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data$$1 = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data$$1);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index$$1 = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index$$1) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index$$1 += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index$$1 = swiper.activeIndex + i;\n      if (index$$1 > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index$$1)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index$$1;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd$$1(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index$$1 = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index$$1;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index$$1 = swiper.activeIndex;\n  const snapIndex = Math.floor(index$$1 / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index$$1 = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index$$1, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index$$1, el) => {\n    const slide = $(el);\n    if (index$$1 < swiper.loopedSlides) appendSlides.push(el);\n    if (index$$1 < slides.length && index$$1 >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index$$1);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index$$1, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index$$1 <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index$$1 >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index$$1; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index$$1 ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data$$1.isTouchEvent = e.type === 'touchstart';\n  if (!data$$1.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data$$1.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data$$1.isTouched && data$$1.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data$$1, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data$$1.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data$$1.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data$$1.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data$$1.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data$$1.isTouched) {\n    if (data$$1.startMoving && data$$1.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data$$1.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data$$1.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data$$1.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data$$1.isTouched = false;\n        data$$1.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data$$1.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data$$1.formElements)) {\n      data$$1.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data$$1.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data$$1.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data$$1.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data$$1.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data$$1.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data$$1.startMoving = true;\n    }\n  }\n  if (data$$1.isScrolling) {\n    data$$1.isTouched = false;\n    return;\n  }\n  if (!data$$1.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data$$1.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data$$1.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data$$1.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data$$1.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data$$1.currentTranslate = diff + data$$1.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data$$1.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data$$1.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data$$1.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data$$1.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data$$1.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data$$1.currentTranslate < data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data$$1.currentTranslate > data$$1.startTranslate) {\n    data$$1.currentTranslate = data$$1.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data$$1.allowThresholdMove) {\n      if (!data$$1.allowThresholdMove) {\n        data$$1.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data$$1.currentTranslate = data$$1.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data$$1.currentTranslate = data$$1.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data$$1.velocities.length === 0) {\n      data$$1.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data$$1.touchStartTime,\n      });\n    }\n    data$$1.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data$$1.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data$$1.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data$$1 = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data$$1.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data$$1.allowTouchCallbacks = false;\n  if (!data$$1.isTouched) {\n    if (data$$1.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data$$1.isMoved && data$$1.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data$$1.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) > 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      data$$1.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data$$1.lastClickTime) < 300) {\n      if (data$$1.clickTimeout) clearTimeout(data$$1.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data$$1.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data$$1.isTouched || !data$$1.isMoved || !swiper.swipeDirection || touches.diff === 0 || data$$1.currentTranslate === data$$1.startTranslate) {\n    data$$1.isTouched = false;\n    data$$1.isMoved = false;\n    data$$1.startMoving = false;\n    return;\n  }\n  data$$1.isTouched = false;\n  data$$1.isMoved = false;\n  data$$1.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data$$1.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data$$1.velocities.length > 1) {\n        const lastMoveEvent = data$$1.velocities.pop();\n        const velocityEvent = data$$1.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data$$1.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data$$1.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data$$1.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView);\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index$$1, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset$$1 = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset: offset$$1,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset$$1 !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset$$1}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset: offset$$1,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index$$1) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index$$1], index$$1));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index$$1) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index$$1], index$$1));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset$$1}px`);\n    onRendered();\n  },\n  renderSlide(slide, index$$1) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index$$1]) {\n      return swiper.virtual.cache[index$$1];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index$$1))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index$$1}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index$$1);\n    if (params.cache) swiper.virtual.cache[index$$1] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.push(slide);\n    swiper.virtual.update(true);\n  },\n  prependSlide(slide) {\n    const swiper = this;\n    swiper.virtual.slides.unshift(slide);\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[cachedIndex + 1] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideNext(0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data$$1 = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY)) delta = data$$1.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data$$1.pixelY) > Math.abs(data$$1.pixelX)) delta = data$$1.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data$$1.pixelX) > Math.abs(data$$1.pixelY) ? -data$$1.pixelX * rtlFactor : -data$$1.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index$$1, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index$$1 = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index$$1 += swiper.loopedSlides;\n        swiper.slideTo(index$$1);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbarHide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index$$1, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index$$1, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index$$1, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index$$1 === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`)\n      : swiper.slides.eq(index$$1);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index$$1) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index$$1}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index$$1]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index$$1 = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index$$1);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index$$1) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index$$1);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text$$1) {\n    return text$$1.toString().toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index$$1 = slide.index();\n          swiper.slideTo(index$$1, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      let tx = -offset$$1;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform$$1 = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform$$1);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset$$1 = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset$$1}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset$$1 = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset$$1;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform$$1 = swiper.translate;\n    const center = isHorizontal ? -transform$$1 + (swiperWidth / 2) : -transform$$1 + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n"],"sourceRoot":""}